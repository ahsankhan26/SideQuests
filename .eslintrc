{
  "env": {
    "node": true,
    "browser": true,
    "es6": true,
    "jest": true
  },
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "eslint:recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks",
    "prettier",
    "@typescript-eslint",
    "unused-imports",
    "tailwindcss",
    "simple-import-sort"
  ],
  "rules": {
    // https://eslint.org/docs/latest/rules/
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "react-hooks/exhaustive-deps": "off",
    "prefer-template": "error",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "comma-dangle": "off",
    "camelcase": "error",
    "spaced-comment": "warn",
    "quotes": ["error", "single", { "avoidEscape": true }],
    "no-duplicate-imports": "error",
    "react-hooks/rules-of-hooks": "error",
    "no-constant-binary-expression": "error",
    "no-await-in-loop": "error",
    "prefer-arrow-callback": ["error", { "allowUnboundThis": false }],
    "prefer-const": "error",
    "prefer-destructuring": "warn",
    "prefer-spread": "warn",
    "no-self-compare": "error",
    "no-template-curly-in-string": "warn",
    "dot-notation": "error",
    "eqeqeq": "error",
    "no-alert": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-else-return": "error",
    "no-nested-ternary": "error",
    "no-var": "error",
    "require-await": "error",
    "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ], // Overrides Airbnb configuration and enable no-restricted-syntax
    "import/extensions": "off",
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "react/jsx-sort-props": ["warn", { "ignoreCase": true }],
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "reactstrap",
            "importNames": [
              "Modal",
              "ModalHeader",
              "ModalBody",
              "ModalFooter",
              "Button"
            ],
            "message": "Restricted `react-modal` imports:\n\n[Modal]\n Please use `<Modal />` from `react-modal` for consistency.\n\n[ModalHeader, ModalBody, ModalFooter]\n Please use the modal subcomponents from `src/components/modal` for consistency.\n\n[Button]\nPlease use `<Button />` from `src/components/button` for consistency."
          }
        ]
      }
    ],
    "@next/next/no-html-link-for-pages": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "warn"
  },
  "overrides": [
    {
      "files": ["**/*.js", "**/*.jsx", "**/*.ts", "**/*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // `react` first, `next` second, then packages starting with a character
              ["^react$", "^react", "^next", "^[a-zA-Z]"],
              // Packages starting with `app`
              ["^(app)(/.*|$)"],
              // Packages starting with `@`
              ["^@/"],
              // Imports starting with `src/`
              ["^src/"],
              // Imports starting with `../`
              ["^src/", "^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Imports starting with `./`
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports
              ["^.+\\.s?css$"],
              // Side effect imports
              ["^\\u0000"]
            ]
          }
        ]
      }
    },
    // Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["jest", "jest-formatting", "testing-library", "jest-dom"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ]
    },
    // Configuration for e2e testing (Cypress)
    {
      "files": ["cypress/**/*.ts"],
      "plugins": ["cypress"],
      "extends": ["plugin:cypress/recommended"],
      "parserOptions": {
        "project": "./cypress/tsconfig.json"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "paths": ["./src"]
      },
      "typescript": {}
    }
  }
}
